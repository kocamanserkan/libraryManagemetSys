<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEditGiris.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nL9DdxXl2eUAAAAASUVORK5CYII=
</value>
  </data>
</root>